package main

import (
	"bytes"
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

func sendSMS(apiKey, sender, recipient, message string) {
	url := "https://api.sms-webservice.com/api/V3/Send"

	payload := map[string]interface{}{
		"ApiKey":     apiKey,
		"Sender":     sender,
		"Text":       message,
		"Recipients": []string{recipient},
	}

	jsonData, err := json.Marshal(payload)
	if err != nil {
		fmt.Println("Error marshalling JSON:", err)
		return
	}

	req, err := http.NewRequest("POST", url, bytes.NewBuffer(jsonData))
	if err != nil {
		fmt.Println("Error creating request:", err)
		return
	}

	req.Header.Set("Content-Type", "application/json")

	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		fmt.Println("Error sending request:", err)
		return
	}
	defer resp.Body.Close()

	if resp.StatusCode == 200 {
		fmt.Println("SMS sent successfully")
	} else {
		fmt.Println("Error: Status Code", resp.StatusCode)
	}
}

func checkSiteStatus(url string) bool {
	resp, err := http.Get(url)
	if err != nil || resp.StatusCode != 200 {
		return false
	}
	return true
}

func main() {
	apiKey := "YourApiKey"
	sender := "YourSenderNumber"
	recipient := "09123456789"
	siteURL := "http://yourwebsite.com"

	for {
		if !checkSiteStatus(siteURL) {
			message := "Warning: The site is down!"
			sendSMS(apiKey, sender, recipient, message)
		}
		time.Sleep(60 * time.Second) // Check every minute
	}
}
